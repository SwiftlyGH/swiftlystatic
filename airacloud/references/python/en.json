[
    {"name": "abs()", "desc": "Returns the absolute value of a number", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "all()", "desc": "Returns True if all items in an iterable object are true", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "any()", "desc": "Returns True if any item in an iterable object is true", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "ascii()", "desc": "Returns a readable version of an object. Replaces none-ascii characters with escape character", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "bin()", "desc": "Returns the binary version of a number", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "bool()", "desc": "Returns the boolean value of the specified object", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "bytearray()", "desc": "Returns an array of bytes", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "bytes()", "desc": "Returns a bytes object", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "callable()", "desc": "Returns True if the specified object is callable, otherwise False", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "chr()", "desc": "Returns a character from the specified Unicode code.", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "classmethod()", "desc": "Converts a method into a class method", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "compile()", "desc": "Returns the specified source as an object, ready to be executed", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "complex()", "desc": "Returns a complex number", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "delattr()", "desc": "Deletes the specified attribute (property or method) from the specified object", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "dict()", "desc": "Returns a dictionary (Array)", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "dir()", "desc": "Returns a list of the specified object's properties and methods", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "divmod()", "desc": "Returns the quotient and the remainder when argument1 is divided by argument2", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "enumerate()", "desc": "Takes a collection (e.g. a tuple) and returns it as an enumerate object", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "eval()", "desc": "Evaluates and executes an expression", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "exec()", "desc": "Executes the specified code (or object)", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "filter()", "desc": "Use a filter function to exclude items in an iterable object", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "float()", "desc": "Returns a floating point number", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "format()", "desc": "Formats a specified value", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "frozenset()", "desc": "Returns a frozenset object", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "getattr()", "desc": "Returns the value of the specified attribute (property or method)", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "globals()", "desc": "Returns the current global symbol table as a dictionary", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "hasattr()", "desc": "Returns True if the specified object has the specified attribute (property/method)", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "hash()", "desc": "Returns the hash value of a specified object", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "help()", "desc": "Executes the built-in help system", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "hex()", "desc": "Converts a number into a hexadecimal value", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "id()", "desc": "Returns the id of an object", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "input()", "desc": "Allowing user input", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "int()", "desc": "Returns an integer number", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "isinstance()", "desc": "Returns True if a specified object is an instance of a specified object", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "issubclass()", "desc": "Returns True if a specified class is a subclass of a specified object", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "iter()", "desc": "Returns an iterator object", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "len()", "desc": "Returns the length of an object", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "list()", "desc": "Returns a list", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "locals()", "desc": "Returns an updated dictionary of the current local symbol table", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "map()", "desc": "Returns the specified iterator with the specified function applied to each item", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "max()", "desc": "Returns the largest item in an iterable", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "memoryview()", "desc": "Returns a memory view object", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "min()", "desc": "Returns the smallest item in an iterable", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "next()", "desc": "Returns the next item in an iterable", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "object()", "desc": "Returns a new object", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "oct()", "desc": "Converts a number into an octal", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "open()", "desc": "Opens a file and returns a file object", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "ord()", "desc": "Convert an integer representing the Unicode of the specified character", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "pow()", "desc": "Returns the value of x to the power of y", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "print()", "desc": "Prints to the standard output device", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "property()", "desc": "Gets, sets, deletes a property", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "range()", "desc": "Returns a sequence of numbers, starting from 0 and increments by 1 (by default)", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "repr()", "desc": "Returns a readable version of an object", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "reversed()", "desc": "Returns a reversed iterator", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "round()", "desc": "Rounds a numbers", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "set()", "desc": "Returns a new set object", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "setattr()", "desc": "Sets an attribute (property/method) of an object", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "slice()", "desc": "Returns a slice object", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "sorted()", "desc": "Returns a sorted list", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "staticmethod()", "desc": "Converts a method into a static method", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "str()", "desc": "Returns a string object", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "sum()", "desc": "Sums the items of an iterator", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "super()", "desc": "Returns an object that represents the parent class", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "tuple()", "desc": "Returns a tuple", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "type()", "desc": "Returns the type of an object", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "vars()", "desc": "Returns the __dict__ property of an object", "cat": "Built-in Functions", "type": "methods-and-functions"},
    {"name": "zip()", "desc": "Returns an iterator, from two or more iterators", "cat": "Built-in Functions", "type": "methods-and-functions"},
    
    {"name": "capitalize()", "desc": "Converts the first character to upper case", "cat": "String Methods", "type": "methods-and-functions"},
    {"name": "casefold()", "desc": "Converts string into lower case", "cat": "String Methods", "type": "methods-and-functions"},
    {"name": "center()", "desc": "Returns a centered string", "cat": "String Methods", "type": "methods-and-functions"},
    {"name": "count()", "desc": "Returns the number of times a specified value occurs in a string", "cat": "String Methods", "type": "methods-and-functions"},
    {"name": "encode()", "desc": "Returns an encoded version of the string", "cat": "String Methods", "type": "methods-and-functions"},
    {"name": "endswith()", "desc": "Returns true if the string ends with the specified value", "cat": "String Methods", "type": "methods-and-functions"},
    {"name": "expandtabs()", "desc": "Sets the tab size of the string", "cat": "String Methods", "type": "methods-and-functions"},
    {"name": "find()", "desc": "Searches the string for a specified value and returns the position of where it was found", "cat": "String Methods", "type": "methods-and-functions"},
    {"name": "format()", "desc": "Formats specified values in a string", "cat": "String Methods", "type": "methods-and-functions"},
    {"name": "format_map()", "desc": "Formats specified values in a string", "cat": "String Methods", "type": "methods-and-functions"},
    {"name": "index()", "desc": "Searches the string for a specified value and returns the position of where it was found", "cat": "String Methods", "type": "methods-and-functions"},
    {"name": "isalnum()", "desc": "Returns True if all characters in the string are alphanumeric", "cat": "String Methods", "type": "methods-and-functions"},
    {"name": "isalpha()", "desc": "Returns True if all characters in the string are in the alphabet", "cat": "String Methods", "type": "methods-and-functions"},
    {"name": "isascii()", "desc": "Returns True if all characters in the string are ascii characters", "cat": "String Methods", "type": "methods-and-functions"},
    {"name": "isdecimal()", "desc": "Returns True if all characters in the string are decimals", "cat": "String Methods", "type": "methods-and-functions"},
    {"name": "isdigit()", "desc": "Returns True if all characters in the string are digits", "cat": "String Methods", "type": "methods-and-functions"},
    {"name": "isidentifier()", "desc": "Returns True if the string is an identifier", "cat": "String Methods", "type": "methods-and-functions"},
    {"name": "islower()", "desc": "Returns True if all characters in the string are lower case", "cat": "String Methods", "type": "methods-and-functions"},
    {"name": "isnumeric()", "desc": "Returns True if all characters in the string are numeric", "cat": "String Methods", "type": "methods-and-functions"},
    {"name": "isprintable()", "desc": "Returns True if all characters in the string are printable", "cat": "String Methods", "type": "methods-and-functions"},
    {"name": "isspace()", "desc": "Returns True if all characters in the string are whitespaces", "cat": "String Methods", "type": "methods-and-functions"},
    {"name": "istitle()", "desc": "Returns True if the string follows the rules of a title", "cat": "String Methods", "type": "methods-and-functions"},
    {"name": "isupper()", "desc": "Returns True if all characters in the string are upper case", "cat": "String Methods", "type": "methods-and-functions"},
    {"name": "join()", "desc": "Converts the elements of an iterable into a string", "cat": "String Methods", "type": "methods-and-functions"},
    {"name": "ljust()", "desc": "Returns a left justified version of the string", "cat": "String Methods", "type": "methods-and-functions"},
    {"name": "lower()", "desc": "Converts a string into lower case", "cat": "String Methods", "type": "methods-and-functions"},
    {"name": "lstrip()", "desc": "Returns a left trim version of the string", "cat": "String Methods", "type": "methods-and-functions"},
    {"name": "maketrans()", "desc": "Returns a translation table to be used in translations", "cat": "String Methods", "type": "methods-and-functions"},
    {"name": "partition()", "desc": "Returns a tuple where the string is parted into three parts", "cat": "String Methods", "type": "methods-and-functions"},
    {"name": "replace()", "desc": "Returns a string where a specified value is replaced with a specified value", "cat": "String Methods", "type": "methods-and-functions"},
    {"name": "rfind()", "desc": "Searches the string for a specified value and returns the last position of where it was found", "cat": "String Methods", "type": "methods-and-functions"},
    {"name": "rindex()", "desc": "Searches the string for a specified value and returns the last position of where it was found", "cat": "String Methods", "type": "methods-and-functions"},
    {"name": "rjust()", "desc": "Returns a right justified version of the string", "cat": "String Methods", "type": "methods-and-functions"},
    {"name": "rpartition()", "desc": "Returns a tuple where the string is parted into three parts", "cat": "String Methods", "type": "methods-and-functions"},
    {"name": "rsplit()", "desc": "Splits the string at the specified separator, and returns a list", "cat": "String Methods", "type": "methods-and-functions"},
    {"name": "rstrip()", "desc": "Returns a right trim version of the string", "cat": "String Methods", "type": "methods-and-functions"},
    {"name": "split()", "desc": "Splits the string at the specified separator, and returns a list", "cat": "String Methods", "type": "methods-and-functions"},
    {"name": "splitlines()", "desc": "Splits the string at line breaks and returns a list", "cat": "String Methods", "type": "methods-and-functions"},
    {"name": "startswith()", "desc": "Returns true if the string starts with the specified value", "cat": "String Methods", "type": "methods-and-functions"},
    {"name": "strip()", "desc": "Returns a trimmed version of the string", "cat": "String Methods", "type": "methods-and-functions"},
    {"name": "swapcase()", "desc": "Swaps cases, lower case becomes upper case and vice versa", "cat": "String Methods", "type": "methods-and-functions"},
    {"name": "title()", "desc": "Converts the first character of each word to upper case", "cat": "String Methods", "type": "methods-and-functions"},
    {"name": "translate()", "desc": "Returns a translated string", "cat": "String Methods", "type": "methods-and-functions"},
    {"name": "upper()", "desc": "Converts a string into upper case", "cat": "String Methods", "type": "methods-and-functions"},
    {"name": "zfill()", "desc": "Fills the string with a specified number of 0 values at the beginning", "cat": "String Methods", "type": "methods-and-functions"},
    
    {"name": "append()", "desc": "Adds an element at the end of the list", "cat": "List Methods", "type": "methods-and-functions"},
    {"name": "clear()", "desc": "Removes all the elements from the list", "cat": "List Methods", "type": "methods-and-functions"},
    {"name": "copy()", "desc": "Returns a copy of the list", "cat": "List Methods", "type": "methods-and-functions"},
    {"name": "count()", "desc": "Returns the number of elements with the specified value", "cat": "List Methods", "type": "methods-and-functions"},
    {"name": "extend()", "desc": "Add the elements of a list (or any iterable), to the end of the current list", "cat": "List Methods", "type": "methods-and-functions"},
    {"name": "index()", "desc": "Returns the index of the first element with the specified value", "cat": "List Methods", "type": "methods-and-functions"},
    {"name": "insert()", "desc": "Adds an element at the specified position", "cat": "List Methods", "type": "methods-and-functions"},
    {"name": "pop()", "desc": "Removes the element at the specified position", "cat": "List Methods", "type": "methods-and-functions"},
    {"name": "remove()", "desc": "Removes the first item with the specified value", "cat": "List Methods", "type": "methods-and-functions"},
    {"name": "reverse()", "desc": "Reverses the order of the list", "cat": "List Methods", "type": "methods-and-functions"},
    {"name": "sort()", "desc": "Sorts the list", "cat": "List Methods", "type": "methods-and-functions"},
    
    {"name": "clear()", "desc": "Removes all the elements from the dictionary", "cat": "Dictionary Methods", "type": "methods-and-functions"},
    {"name": "copy()", "desc": "Returns a copy of the dictionary", "cat": "Dictionary Methods", "type": "methods-and-functions"},
    {"name": "fromkeys()", "desc": "Returns a dictionary with the specified keys and value", "cat": "Dictionary Methods", "type": "methods-and-functions"},
    {"name": "get()", "desc": "Returns the value of the specified key", "cat": "Dictionary Methods", "type": "methods-and-functions"},
    {"name": "items()", "desc": "Returns a list containing a tuple for each key value pair", "cat": "Dictionary Methods", "type": "methods-and-functions"},
    {"name": "keys()", "desc": "Returns a list containing the dictionary's keys", "cat": "Dictionary Methods", "type": "methods-and-functions"},
    {"name": "pop()", "desc": "Removes the element with the specified key", "cat": "Dictionary Methods", "type": "methods-and-functions"},
    {"name": "popitem()", "desc": "Removes the last inserted key-value pair", "cat": "Dictionary Methods", "type": "methods-and-functions"},
    {"name": "setdefault()", "desc": "Returns the value of the specified key. If the key does not exist: insert the key, with the specified value", "cat": "Dictionary Methods", "type": "methods-and-functions"},
    {"name": "update()", "desc": "Updates the dictionary with the specified key-value pairs", "cat": "Dictionary Methods", "type": "methods-and-functions"},
    {"name": "values()", "desc": "Returns a list of all the values in the dictionary", "cat": "Dictionary Methods", "type": "methods-and-functions"},
    
    {"name": "count()", "desc": "Returns the number of times a specified value occurs in a tuple", "cat": "Tuple Methods", "type": "methods-and-functions"},
    {"name": "index()", "desc": "Searches the tuple for a specified value and returns the position of where it was found", "cat": "Tuple Methods", "type": "methods-and-functions"},
    
    {"name": "add()", "desc": "Adds an element to the set", "cat": "Set Methods", "type": "methods-and-functions"},
    {"name": "clear()", "desc": "Removes all the elements from the set", "cat": "Set Methods", "type": "methods-and-functions"},
    {"name": "copy()", "desc": "Returns a copy of the set", "cat": "Set Methods", "type": "methods-and-functions"},
    {"name": "difference()", "desc": "Returns a set containing the difference between two or more sets", "cat": "Set Methods", "type": "methods-and-functions"},
    {"name": "difference_update()", "desc": "Removes the items in this set that are also included in another, specified set", "cat": "Set Methods", "type": "methods-and-functions"},
    {"name": "discard()", "desc": "Remove the specified item", "cat": "Set Methods", "type": "methods-and-functions"},
    {"name": "intersection()", "desc": "Returns a set, that is the intersection of two or more sets", "cat": "Set Methods", "type": "methods-and-functions"},
    {"name": "intersection_update()", "desc": "Removes the items in this set that are not present in other, specified set(s)", "cat": "Set Methods", "type": "methods-and-functions"},
    {"name": "isdisjoint()", "desc": "Returns whether two sets have a intersection or not", "cat": "Set Methods", "type": "methods-and-functions"},
    {"name": "issubset()", "desc": "Returns whether another set contains this set or not", "cat": "Set Methods", "type": "methods-and-functions"},
    {"name": "issuperset()", "desc": "Returns whether this set contains another set or not", "cat": "Set Methods", "type": "methods-and-functions"},
    {"name": "pop()", "desc": "Removes an element from the set", "cat": "Set Methods", "type": "methods-and-functions"},
    {"name": "remove()", "desc": "Removes the specified element", "cat": "Set Methods", "type": "methods-and-functions"},
    {"name": "symmetric_difference()", "desc": "Returns a set with the symmetric differences of two sets", "cat": "Set Methods", "type": "methods-and-functions"},
    {"name": "symmetric_difference_update()", "desc": "inserts the symmetric differences from this set and another", "cat": "Set Methods", "type": "methods-and-functions"},
    {"name": "union()", "desc": "Return a set containing the union of sets", "cat": "Set Methods", "type": "methods-and-functions"},
    {"name": "update()", "desc": "Update the set with another set, or any other iterable", "cat": "Set Methods", "type": "methods-and-functions"},
    
    {"name": "close()", "desc": "Closes the file", "cat": "File Methods", "type": "methods-and-functions"},
    {"name": "detach()", "desc": "Returns the separated raw stream from the buffer", "cat": "File Methods", "type": "methods-and-functions"},
    {"name": "fileno()", "desc": "Returns a number that represents the stream, from the operating system's perspective", "cat": "File Methods", "type": "methods-and-functions"},
    {"name": "flush()", "desc": "Flushes the internal buffer", "cat": "File Methods", "type": "methods-and-functions"},
    {"name": "isatty()", "desc": "Returns whether the file stream is interactive or not", "cat": "File Methods", "type": "methods-and-functions"},
    {"name": "read()", "desc": "Returns the file content", "cat": "File Methods", "type": "methods-and-functions"},
    {"name": "readable()", "desc": "Returns whether the file stream can be read or not", "cat": "File Methods", "type": "methods-and-functions"},
    {"name": "readline()", "desc": "Returns one line from the file", "cat": "File Methods", "type": "methods-and-functions"},
    {"name": "readlines()", "desc": "Returns a list of lines from the file", "cat": "File Methods", "type": "methods-and-functions"},
    {"name": "seek()", "desc": "Change the file position", "cat": "File Methods", "type": "methods-and-functions"},
    {"name": "seekable()", "desc": "Returns whether the file allows us to change the file position", "cat": "File Methods", "type": "methods-and-functions"},
    {"name": "tell()", "desc": "Returns the current file position", "cat": "File Methods", "type": "methods-and-functions"},
    {"name": "truncate()", "desc": "Resizes the file to a specified size", "cat": "File Methods", "type": "methods-and-functions"},
    {"name": "writable()", "desc": "Returns whether the file can be written to or not", "cat": "File Methods", "type": "methods-and-functions"},
    {"name": "write()", "desc": "Writes the specified string to the file", "cat": "File Methods", "type": "methods-and-functions"},
    {"name": "writelines()", "desc": "Writes a list of strings to the file", "cat": "File Methods", "type": "methods-and-functions"},
    
    {"name": "and", "desc": "A logical operator", "type": "keywords"},
    {"name": "as", "desc": "To create an alias", "type": "keywords"},
    {"name": "assert", "desc": "For debugging", "type": "keywords"},
    {"name": "break", "desc": "To break out of a loop", "type": "keywords"},
    {"name": "class", "desc": "To define a class", "type": "keywords"},
    {"name": "continue", "desc": "To continue to the next iteration of a loop", "type": "keywords"},
    {"name": "def", "desc": "To define a function", "type": "keywords"},
    {"name": "del", "desc": "To delete an object", "type": "keywords"},
    {"name": "for", "desc": "To create a for loop", "type": "keywords"},
    {"name": "from", "desc": "To import specific parts of a module", "type": "keywords"},
    {"name": "global", "desc": "To declare a global variable", "type": "keywords"},
    {"name": "import", "desc": "To import a module", "type": "keywords"},
    {"name": "in", "desc": "To check if a value is present in a list, tuple, etc.", "type": "keywords"},
    {"name": "is", "desc": "To test if two variables are equal", "type": "keywords"},
    {"name": "lambda", "desc": "To create an anonymous function", "type": "keywords"},
    {"name": "nonlocal", "desc": "To declare a non-local variable", "type": "keywords"},
    {"name": "not", "desc": "A logical operator", "type": "keywords"},
    {"name": "or", "desc": "A logical operator", "type": "keywords"},
    {"name": "pass", "desc": "A null statement, a statement that will do nothing", "type": "keywords"},
    {"name": "raise", "desc": "To raise an exception", "type": "keywords"},
    {"name": "return", "desc": "To exit a function and return a value", "type": "keywords"},
    {"name": "while", "desc": "To create a while loop", "type": "keywords"},
    {"name": "with", "desc": "Used to simplify exception handling", "type": "keywords"},
    {"name": "yield", "desc": "To return a list of values from a generator", "type": "keywords"},
    {"name": "try", "desc": "To make a try...except statement", "type": "keywords"},
    {"name": "except", "desc": "Used with exceptions, what to do when an exception occurs", "type": "keywords"},
    {"name": "finally", "desc": "Used with exceptions, a block of code that will be executed no matter if there is an exception or not", "type": "keywords"},
    {"name": "if", "desc": "To make a conditional statement", "type": "keywords"},
    {"name": "elif", "desc": "Used in conditional statements, same as else if", "type": "keywords"},
    {"name": "else", "desc": "Used in conditional statements", "type": "keywords"},
    {"name": "True", "desc": "Boolean value, result of comparison operations", "type": "keywords"},
    {"name": "False", "desc": "Boolean value, result of comparison operations", "type": "keywords"},
    {"name": "None", "desc": "Represents a null value", "type": "keywords"}
    
]